
/**
 * @author ©Towns.cz
 * @fileOverview Creates instance T.World.mapGenerator
 */
//======================================================================================================================



T.World.mapGenerator = new T.MapGenerator(

    T.Math.blurXY(function(x,y){

        //todo//var key='x'+x+'y'+y;
        //todo//if(typeof z_map_cache[key]!='undefined'){
        //todo//    return(z_map_cache[key]);
        //todo//}


        const div=100;


        var n= 0;
        var max_possible_n=0;

        var _x,_y;

        for(var i= 0;i<13;i++){

            n += Math.round(Math.pow(x*y-66, 2)) % (div + 1);

            max_possible_n+=div;

            //x=Math.floor(x/3);
            //y=Math.floor(y/3);
            //var xy = T.Math.xyRotate(x,y,57);
            //x=xy.x;
            //y=xy.y;

            _x=(-y*0.2)+(x*0.8);
            _y=(x*0.2)+(y*0.8);

            x=Math.floor(_x/2);
            y=Math.floor(_y/2);
        }



        n=n/max_possible_n;

        if(n<0)n-=Math.floor(n);
        if(n>1)n-=Math.floor(n);

        //todo//z_map_cache[key]=n;
        return(n);

    },2)
    ,

    ,

    new T.MapGenerator.Biotope([

        { amount: 120 , terrain: T.World.terrains[ 1]},//moře
        { amount: 40 , terrain: T.World.terrains[11]},//řeka
        { amount: 30 , terrain: T.World.terrains[ 4]},//písek
        { amount: 20 , terrain: T.World.terrains[12]},//tráva jaro
        { amount: 40 , terrain: T.World.terrains[ 9]},//tráva toxic
        { amount: 20 , terrain: T.World.terrains[ 8]},//tráva normal
        { amount: 20 , terrain: T.World.terrains[10]},//les
        { amount: 50 , terrain: T.World.terrains[ 4]},//písek
        { amount: 10 , terrain: T.World.terrains[13]},//tráva pozim
        { amount: 20 , terrain: T.World.terrains[ 5]},//kamení
        { amount: 60 , terrain: T.World.terrains[ 3]},//sníh/led
        { amount: 10 , terrain: T.World.terrains[10]},//les
        { amount: 60 , terrain: T.World.terrains[ 7]},//sníh/led
        { amount: 10 , terrain: T.World.terrains[ 5]},//kamení



    ]),


    function(object,virtual_objects){

        if(object.type!='terrain')return;

        if(object.getCode()==5){
            virtual_objects.push(
                {

                    x: object.x,//todo
                    y: object.y,//todo
                    type: 'natural',
                    design: {
                        type: 'natural',
                        data:{
                            image:'rock'+Math.floor(T.Math.randomSeedPosition(1,{x:object.x,y:object.y})*6)%6+'dark'+Math.floor(T.Math.randomSeedPosition(2,{x:object.x,y:object.y})*4)%4,
                            size: 0.5+T.Math.randomSeedPosition(5,{x:object.x,y:object.y})*1
                        }
                    }

                }
            );


        }else
        if(object.getCode()==10){
                        virtual_objects.push(
                {

                    x: object.x,//todo
                    y: object.y,//todo
                    type: 'natural',
                    design: {
                        type: 'natural',
                        data:{
                            image:'tree'+Math.floor(T.Math.randomSeedPosition(3,{x:object.x,y:object.y})*10)%10,
                            size: 1+T.Math.randomSeedPosition(6,{x:object.x,y:object.y})/2
                        }
                    }

                }
            );


        }


    }


);


















