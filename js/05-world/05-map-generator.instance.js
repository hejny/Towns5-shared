
/**
 * @author ©Towns.cz
 * @fileOverview ...
 */
//======================================================================================================================
//-----------------------Creating namespace T (=global.Towns).MapGenerator
var T = global.Towns;
T.World = T.World || {};
var A/*Actual Namespace*/ = T.World;
module.exports = Towns;
//-----------------------
//======================================================================================================================



A.mapGenerator = new T.MapGenerator(

    T.Math.blurXY(function(x,y){


        const div=100;


        var n= 0;
        var max_possible_n=0;


        for(var i= 0;i<13;i++){

            n += Math.round(Math.pow(x*y-66, 2)) % (div + 1);

            max_possible_n+=div;

            x=Math.floor(x/3);
            y=Math.floor(y/3);

            var xy = T.Math.xyRotate(x,y,57);

            x=xy.x;
            y=xy.y;

        }



        n=n/max_possible_n;

        if(n<0)n-=Math.floor(n);
        if(n>1)n-=Math.floor(n);

        return(n);

    },2)
    ,

    ,

    new T.MapGenerator.Biotope([

        { amount: 120 , terrain: A.terrains[ 1]},//moře
        { amount: 40 , terrain: A.terrains[11]},//řeka
        { amount: 30 , terrain: A.terrains[ 4]},//písek
        { amount: 20 , terrain: A.terrains[12]},//tráva jaro
        { amount: 40 , terrain: A.terrains[ 9]},//tráva toxic
        { amount: 20 , terrain: A.terrains[ 8]},//tráva normal
        { amount: 20 , terrain: A.terrains[10]},//les
        { amount: 50 , terrain: A.terrains[ 4]},//písek
        { amount: 10 , terrain: A.terrains[13]},//tráva pozim
        { amount: 20 , terrain: A.terrains[ 5]},//kamení
        { amount: 60 , terrain: A.terrains[ 3]},//sníh/led
        { amount: 10 , terrain: A.terrains[10]},//les
        { amount: 60 , terrain: A.terrains[ 7]},//sníh/led
        { amount: 10 , terrain: A.terrains[ 5]},//kamení



    ]),


    function(object,virtual_objects){

        if(object.type!='terrain')return;

        if(object.design.data.image==5){
            virtual_objects.push(
                {

                    x: object.x,//todo
                    y: object.y,//todo
                    type: 'natural',
                    design: {
                        type: 'natural',
                        data:{
                            image:'rock'+Math.floor(T.Math.randomSeedPosition(1,{x:object.x,y:object.y})*6)%6+'dark'+Math.floor(T.Math.randomSeedPosition(2,{x:object.x,y:object.y})*4)%4,
                            size: 0.5+T.Math.randomSeedPosition(5,{x:object.x,y:object.y})*1
                        }
                    }

                }
            );


        }else
        if(object.design.data.image==10){
                        virtual_objects.push(
                {

                    x: object.x,//todo
                    y: object.y,//todo
                    type: 'natural',
                    design: {
                        type: 'natural',
                        data:{
                            image:'tree'+Math.floor(T.Math.randomSeedPosition(3,{x:object.x,y:object.y})*10)%10,
                            size: 1+T.Math.randomSeedPosition(6,{x:object.x,y:object.y})/2
                        }
                    }

                }
            );


        }


    }


);


















