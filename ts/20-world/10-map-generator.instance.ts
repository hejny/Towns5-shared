
/**
 * @author ©Towns.cz
 * @fileOverview Creates instance T.World.mapGenerator
 */
//======================================================================================================================



T.World.mapGenerator = new T.MapGenerator(

    TMath.blurXY(function(x,y){

        //todo//var key='x'+x+'y'+y;
        //todo//if(typeof z_map_cache[key]!='undefined'){
        //todo//    return(z_map_cache[key]);
        //todo//}


        const div=100;


        var n= 0;
        var max_possible_n=0;

        var _x,_y;

        var k=0.4;
        var k_=1-k;

        for(var i= 0;i<11;i++){

            n += Math.round(Math.pow(x*y-66, 2)) % (div + 1);

            max_possible_n+=div;

            //x=Math.floor(x/3);
            //y=Math.floor(y/3);
            //var xy = TMath.xyRotate(x,y,57);
            //x=xy.x;
            //y=xy.y;

            _x=(-y*k)+(x*k_);
            _y=(x*k)+(y*k_);

            x=Math.floor(_x/4);
            y=Math.floor(_y/4);
        }



        n=n/max_possible_n;

        if(n<0)n-=Math.floor(n);
        if(n>1)n-=Math.floor(n);

        //todo//z_map_cache[key]=n;
        return(n);

    },2)
    ,
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0001,0.0001,0.0001,0.0001,0.0001,0.0001,0.0002,0.0003,0.0003,0.0005,0.0006,0.0007,0.0009,0.001,0.001,0.001,0.0012,0.0014,0.0015,0.0016,0.0021,0.0025,0.003,0.0033,0.0034,0.0037,0.0038,0.0042,0.0046,0.0049,0.0057,0.0065,0.0068,0.0072,0.0074,0.0079,0.0084,0.009,0.0096,0.0105,0.0115,0.0123,0.0131,0.0142,0.0148,0.0159,0.0166,0.0184,0.019,0.0204,0.021,0.022,0.0232,0.0245,0.026,0.0266,0.0277,0.029,0.0297,0.031,0.0318,0.0331,0.0346,0.0361,0.0378,0.0389,0.0404,0.0414,0.0431,0.0456,0.0475,0.0501,0.0517,0.0533,0.0548,0.0566,0.0589,0.0609,0.0622,0.0635,0.0658,0.0678,0.0692,0.0712,0.0733,0.0751,0.0774,0.079,0.0813,0.0837,0.0859,0.088,0.0902,0.0927,0.0961,0.0988,0.1003,0.1031,0.105,0.1071,0.11,0.1113,0.1137,0.1165,0.1187,0.1218,0.1243,0.1277,0.1297,0.1323,0.1353,0.1371,0.1395,0.1426,0.1449,0.1474,0.1509,0.1536,0.156,0.1582,0.1605,0.1633,0.1662,0.1692,0.1726,0.1755,0.1781,0.1813,0.1842,0.1869,0.1899,0.1939,0.1975,0.2001,0.2029,0.207,0.2108,0.2135,0.2158,0.2187,0.221,0.2238,0.226,0.2283,0.2326,0.2362,0.2394,0.2427,0.2455,0.2485,0.2508,0.2532,0.2568,0.2594,0.2628,0.2651,0.2678,0.2712,0.2738,0.276,0.2792,0.2819,0.2852,0.2885,0.2908,0.2943,0.2969,0.2994,0.3019,0.3049,0.3077,0.3108,0.3135,0.3162,0.3194,0.3216,0.3243,0.3276,0.3307,0.3334,0.336,0.3386,0.3421,0.3443,0.3462,0.3484,0.351,0.3535,0.3569,0.3593,0.3618,0.3642,0.3659,0.3681,0.3706,0.3722,0.3742,0.3772,0.3794,0.3816,0.3837,0.3865,0.3879,0.3907,0.3925,0.3947,0.3967,0.3985,0.3998,0.4021,0.4035,0.4054,0.4067,0.4088,0.4107,0.4133,0.4141,0.4161,0.4177,0.4193,0.4209,0.4219,0.4234,0.4245,0.4264,0.4283,0.4302,0.4318,0.4327,0.4346,0.4363,0.4381,0.44,0.4409,0.4435,0.445,0.4462,0.4484,0.4492,0.4506,0.4518,0.4533,0.4548,0.4554,0.456,0.4573,0.4588,0.4605,0.4616,0.463,0.4638,0.4656,0.4663,0.4672,0.4684,0.4696,0.4708,0.4721,0.473,0.4737,0.4747,0.4756,0.4765,0.4781,0.4791,0.4802,0.4809,0.4819,0.4824,0.483,0.4838,0.4847,0.4859,0.4865,0.487,0.4875,0.4883,0.4894,0.4901,0.4907,0.4915,0.4929,0.4934,0.494,0.4949,0.4955,0.496,0.4967,0.4971,0.4975,0.4981,0.499,0.4997,0.5005,0.5008,0.5018,0.5024,0.5032,0.5038,0.5042,0.5046,0.505,0.5059,0.5067,0.507,0.5074,0.5077,0.5084,0.5086,0.5095,0.5104,0.5109,0.5117,0.5122,0.5129,0.5136,0.514,0.5141,0.5145,0.515,0.5153,0.5157,0.5162,0.5169,0.5172,0.5176,0.518,0.5186,0.5193,0.5197,0.5202,0.5207,0.5209,0.5214,0.5218,0.5223,0.5231,0.5237,0.5244,0.5246,0.5249,0.5259,0.5261,0.5269,0.5272,0.5275,0.5281,0.5283,0.5285,0.5291,0.5302,0.531,0.5317,0.532,0.5326,0.5334,0.5336,0.5341,0.5343,0.5345,0.5349,0.5353,0.5357,0.5364,0.5377,0.5382,0.5388,0.5393,0.5399,0.5403,0.5412,0.5419,0.543,0.5437,0.5446,0.5457,0.5466,0.5476,0.5482,0.5486,0.5491,0.5495,0.5503,0.5506,0.5515,0.5522,0.5527,0.554,0.555,0.5553,0.5557,0.5562,0.5569,0.5578,0.5586,0.5595,0.5608,0.5616,0.5626,0.5634,0.5645,0.5652,0.5667,0.5673,0.5683,0.5697,0.5707,0.5723,0.5739,0.575,0.5758,0.5771,0.5779,0.5791,0.5803,0.5817,0.5833,0.5849,0.5865,0.5876,0.5884,0.5899,0.5919,0.5929,0.5942,0.5954,0.5969,0.5987,0.5998,0.6018,0.6036,0.6052,0.6063,0.6077,0.6099,0.6116,0.6136,0.6154,0.6166,0.6185,0.6201,0.6223,0.6238,0.6258,0.6278,0.6295,0.631,0.6324,0.6344,0.6358,0.6372,0.6395,0.6414,0.6434,0.6451,0.6472,0.6493,0.6513,0.6536,0.6559,0.6578,0.6598,0.6622,0.6638,0.667,0.6696,0.671,0.674,0.6765,0.679,0.6811,0.6836,0.6861,0.6884,0.6903,0.6933,0.6946,0.6976,0.6997,0.7027,0.7049,0.7084,0.7109,0.7128,0.7164,0.7189,0.7222,0.7245,0.7271,0.7305,0.7326,0.7367,0.7398,0.7421,0.7443,0.7461,0.7483,0.7507,0.754,0.7566,0.7587,0.7615,0.7639,0.7662,0.7693,0.7723,0.7753,0.7769,0.7797,0.7822,0.7843,0.7869,0.7891,0.7918,0.7944,0.7982,0.801,0.8041,0.8068,0.8094,0.812,0.8148,0.8174,0.82,0.8219,0.824,0.8259,0.8287,0.8311,0.8333,0.8349,0.8374,0.841,0.8433,0.8456,0.8481,0.8518,0.854,0.8562,0.8588,0.862,0.864,0.8666,0.8693,0.8719,0.8737,0.8749,0.8773,0.8793,0.8816,0.8839,0.887,0.8888,0.8905,0.8924,0.8948,0.8966,0.8986,0.9009,0.9029,0.9039,0.9063,0.908,0.9095,0.911,0.9125,0.915,0.9173,0.9186,0.9209,0.9228,0.9249,0.9259,0.927,0.929,0.9303,0.9322,0.9332,0.9343,0.9356,0.9372,0.9387,0.9407,0.9427,0.944,0.9459,0.9473,0.949,0.9508,0.9521,0.9533,0.9555,0.9569,0.958,0.9592,0.9606,0.9612,0.9617,0.962,0.9627,0.9642,0.9646,0.9658,0.967,0.968,0.9684,0.9688,0.9698,0.9706,0.9719,0.9727,0.974,0.9747,0.9761,0.9774,0.9785,0.9793,0.9802,0.9811,0.9817,0.9823,0.9828,0.984,0.9846,0.9851,0.9858,0.9863,0.9869,0.987,0.9874,0.9879,0.9886,0.9888,0.9895,0.9903,0.9904,0.9907,0.9912,0.9913,0.9917,0.992,0.9928,0.9929,0.9936,0.9939,0.9942,0.9946,0.9949,0.9955,0.9955,0.9959,0.9963,0.9964,0.9966,0.9966,0.9968,0.9969,0.9971,0.9973,0.9978,0.9981,0.9985,0.9986,0.9988,0.9988,0.9989,0.9989,0.999,0.999,0.999,0.9993,0.9993,0.9993,0.9993,0.9993,0.9993,0.9996,0.9996,0.9997,0.9997,0.9997,0.9998,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
    ,

    new T.MapGenerator.Biotope([

        { amount: 120 , terrain: T.World.terrains[ 1]},//moře
        { amount: 40 , terrain: T.World.terrains[11]},//řeka
        { amount: 30 , terrain: T.World.terrains[ 4]},//písek
        { amount: 20 , terrain: T.World.terrains[12]},//tráva jaro
        { amount: 40 , terrain: T.World.terrains[ 9]},//tráva toxic
        { amount: 20 , terrain: T.World.terrains[10]},//les
        { amount: 10 , terrain: T.World.terrains[ 8]},//tráva normal
        { amount: 20 , terrain: T.World.terrains[10]},//les
        { amount: 20 , terrain: T.World.terrains[12]},//tráva jaro
        { amount: 50 , terrain: T.World.terrains[ 4]},//písek
        { amount: 10 , terrain: T.World.terrains[13]},//tráva pozim
        { amount: 20 , terrain: T.World.terrains[ 5]},//kamení
        { amount: 60 , terrain: T.World.terrains[ 3]},//sníh/led
        { amount: 5 , terrain: T.World.terrains[10]},//les
        { amount: 60 , terrain: T.World.terrains[ 7]},//sníh/led
        { amount: 10 , terrain: T.World.terrains[ 5]},//kamení



    ]),


    function(object,virtual_objects){

        if(object.type!='terrain')return;

        /*if(object.getCode()==5){
            virtual_objects.push(
                {

                    x: object.x,//todo
                    y: object.y,//todo
                    type: 'natural',
                    design: {
                        type: 'natural',
                        data:{
                            image:'rock'+Math.floor(TMath.randomSeedPosition(1,{x:object.x,y:object.y})*6)%6+'dark'+Math.floor(TMath.randomSeedPosition(2,{x:object.x,y:object.y})*4)%4,
                            size: 0.5+TMath.randomSeedPosition(5,{x:object.x,y:object.y})*1
                        }
                    }

                }
            );


        }else*/
        if(object.getCode()==10){

            if(TMath.randomSeedPosition(3,{x:object.x,y:object.y})>0.95){

                virtual_objects.push(
                    {

                        x: object.x,//todo
                        y: object.y,//todo
                        type: 'natural',
                        design: {
                            type: 'natural',
                            data:{
                                model:'tree',
                                size: 3+TMath.randomSeedPosition(6,{x:object.x,y:object.y})/2,
                                rotation:{
                                    x: TMath.randomSeedPosition(7,{x:object.x,y:object.y})*20-10,
                                    y: TMath.randomSeedPosition(7,{x:object.x,y:object.y})*20-10,
                                    z: TMath.randomSeedPosition(7,{x:object.x,y:object.y})*360
                                }
                            }
                        }

                    }
                );

            }


        }


    }


);


















